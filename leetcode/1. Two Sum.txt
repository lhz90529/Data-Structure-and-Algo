*1. Two Sum
Tag: Array, Hash Table
Input: int target, an array
Output: return the index of two numbers that can be added up to target;
Constrain: each number can be used ONLY once;

Basic idea:
	Fill the Hash Table with <key, value> pair ---> <what the value is, where it is>
	For each number ‘x’ check if its counterpart 'target - x' is existed in the table;
Data Structure Involved: Hash Table
	Operation:
		Insertion: O(1)
		Searching: O(1)

Pseudo code:
1: Create an empty Hash Table ---> spatial cost: O(N)

2: Fill up the hashtable:
For each number x from input array ---> Temporal cost: O(N)
	table[x] = index of x; ---> Hash Table insertion: O(1)
End for
such that later 1: we can find if a value is existed in our table
	            2: if it's existed, we can find where it is
	
3: Search:
For each number x from input array
If we can find the counterpart 'v' = target - x from table ---> Hash Table Search: O(1)
And if x and v are not the same number; i.e. they don't share same location;
			return index of x and index of v;
		end if
End for

   
		

